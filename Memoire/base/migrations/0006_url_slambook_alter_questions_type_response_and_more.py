# Generated by Django 5.1.3 on 2024-12-15 15:50

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0005_questions_question_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='Url_slambook',
            fields=[
                ('urlid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterField(
            model_name='questions',
            name='type',
            field=models.CharField(choices=[('MCQ', 'Mcq'), ('MSQ', 'Msq'), ('Text_One', 'Text One'), ('Text_multi', 'Text Multi'), ('IMAGE', 'Image'), ('DATE', 'Date'), ('Bottle', 'Bottle'), ('Sign', 'Sign')], max_length=10),
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('responseid', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('slamid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.slambooks')),
            ],
        ),
        migrations.CreateModel(
            name='Response_answer',
            fields=[
                ('answerid', models.AutoField(primary_key=True, serialize=False)),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('answer_image', models.ImageField(blank=True, null=True, upload_to='response_images/')),
                ('bottle_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('answer_option', models.ManyToManyField(blank=True, to='base.question_options')),
                ('questionid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.questions')),
                ('responseid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.response')),
            ],
        ),
    ]
